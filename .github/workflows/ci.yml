name: CI
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]
    tags:
      - '*'

jobs:
  validate:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    env:
      working-directory: ./example

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        working-directory: ${{env.working-directory}}

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install/Update dependencies
        run: yarn install
        working-directory: ${{env.working-directory}}

      - name: Review code
        run: yarn run review
        working-directory: ${{env.working-directory}}

  test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    env:
      working-directory: ./example

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        working-directory: ${{env.working-directory}}

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install/Update dependencies
        run: yarn install
        working-directory: ${{env.working-directory}}

      - name: Run tests
        run: yarn run test
        working-directory: ${{env.working-directory}}
